name: Setup Minecraft Server and Expose with Ngrok

on:
  push:
    branches:
      - main

jobs:
  setup_minecraft_server:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Chocolatey
      shell: pwsh
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

    - name: Install Node.js
      shell: pwsh
      run: choco install nodejs-lts -y

    - name: Download and Setup Minecraft Server
      shell: pwsh
      run: |
        # Define paths and URLs
        $ngrokUrl = "https://bin.equinox.io/c/4b0ac842e8e3/ngrok-stable-windows-amd64.zip" # Example URL; verify and update
        $ngrokPath = "$env:TEMP\ngrok.zip"
        $ngrokExePath = "$env:TEMP\ngrok.exe"
        $serverPath = "$env:TEMP\minecraft-bedrock"
        $serverZipUrl = "https://minecraft.net/download/server/bedrock"
        $serverZipPath = "$env:TEMP\minecraft-bedrock-server.zip"
        $ngrokAuthToken = $env:NGROK_AUTH_TOKEN # Secret from GitHub Secrets

        # Download and install Ngrok
        Invoke-WebRequest -Uri $ngrokUrl -OutFile $ngrokPath
        Expand-Archive -Path $ngrokPath -DestinationPath $env:TEMP

        # Configure Ngrok with the auth token
        Start-Process -FilePath $ngrokExePath -ArgumentList "authtoken $ngrokAuthToken" -NoNewWindow -Wait

        # Download and extract Minecraft Bedrock server
        Invoke-WebRequest -Uri $serverZipUrl -OutFile $serverZipPath
        Expand-Archive -Path $serverZipPath -DestinationPath $serverPath

        # Start the Minecraft Bedrock server
        Start-Process -FilePath "$serverPath\bedrock_server.exe" -NoNewWindow -PassThru

        # Wait for server to start
        Start-Sleep -Seconds 30

        # Start Ngrok to tunnel Minecraft server port (19132)
        Start-Process -FilePath $ngrokExePath -ArgumentList "tcp 19132" -NoNewWindow -PassThru

        # Wait for Ngrok to establish tunnel
        Start-Sleep -Seconds 10

        # Retrieve Ngrok public URL
        $ngrokApiUrl = "http://localhost:4040/api/tunnels"
        $ngrokTunnel = (Invoke-RestMethod -Uri $ngrokApiUrl).tunnels[0].public_url

        # Output the server and Ngrok URL
        Write-Output "Minecraft Bedrock server is running."
        Write-Output "Join the server using the following URL: $ngrokTunnel"

    - name: Output Ngrok URL
      shell: pwsh
      run: |
        Write-Output "Minecraft Bedrock server is running."
        Write-Output "Join the server using the following URL: $ngrokTunnel"
      env:
        ngrokTunnel: ${{ steps.setup_minecraft_server.outputs.ngrokTunnel }}
